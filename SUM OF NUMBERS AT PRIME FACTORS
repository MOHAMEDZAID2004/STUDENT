def is_prime(n):
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(n**0.5)+1, 2):
        if n % i == 0:
            return False
    return True

def prime_factors(num):
    factors = {}
    divisor = 2
    while num > 1:
        count = 0
        while num % divisor == 0:
            num //= divisor
            count += 1
        if count > 0:
            factors[divisor] = count
        divisor += 1
    return factors

def sum_at_prime_factor_indices(arr, num):
    if not arr:
        return -1
    
   
    factors = prime_factors(num)
    sum_result = 0
    valid_index_found = False

    
    for prime, exponent in factors.items():
        if prime < len(arr):  # Check if prime factor is a valid index in the array
            sum_result += exponent * arr[prime]
            valid_index_found = True
    
    return sum_result if valid_index_found else 0
arr = [11,21,32,45,1,23]
num = 6
result = sum_at_prime_factor_indices(arr, num)
print(result)
